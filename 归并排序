import java.util.Random;
public class MergeSort
{
    public static void merge(int[] arr,int a,int b,int c)
    {
        int[] subarr1=new int[b-a];
        int[] subarr2=new int[c-b+1];
        int i,j,k;
        for(i=0;i<b-a;i++)
        {
            subarr1[i]=arr[a+i];
        }
        for(i=0;i<c-b+1;i++)
        {
            subarr2[i]=arr[b+i];
        }
        i=a;
        j=0;
        k=0;
        while(j<b-a&&k<c-b+1)
        {
            if(subarr1[j]<subarr2[k])
            {
                arr[i]=subarr1[j];
                i++;
                j++;
            }
            else
            {
                arr[i]=subarr2[k];
                i++;
                k++;
            }
        }
        while(j<b-a)
        {
            arr[i]=subarr1[j];
            i++;
            j++;
        }
        while(k<c-b+1)
        {
            arr[i]=subarr2[k];
            i++;
            k++;
        }
    }
    public static void mergesort(int[] arr,int L,int R)
    {
        if(L==R)
            return;
        else
        {
            int M = (L + R) / 2;
            mergesort(arr, L, M);
            mergesort(arr, M + 1, R);
            merge(arr, L, M + 1, R);
        }
    }
    public static void main(String[] args)
    {
        Random ss=new Random();
        int[] arr=new int[500];
        int i=0;
        while(i<arr.length)
        {
            arr[i]=ss.nextInt(1000);
            i++;
        }
        int j=0;
        int j1=0;
        while(j<arr.length)
        {
            System.out.print(arr[j]+"   ");
            j1++;
            if(j1%10==0)
                System.out.println();
            j++;
        }
        System.out.println();
        mergesort(arr,0,arr.length-1);
        int k=0;
        int k1=0;
        while(k<arr.length)
        {
            System.out.print(arr[k]+"   ");
            k1++;
            if(k1%10==0)
                System.out.println();
            k++;
        }
    }
}
